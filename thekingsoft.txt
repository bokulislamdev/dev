//plagin
https://air-datepicker.com/examples
nicedi
//for global load
filepath: composer.json
 "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        },
        "files": [
            "app/Http/Helpers/helpers.php"
        ]
    },


//methods
hash_hmac(),scopefunction(),explode(',',$variable),file_get_contents(),whereHas(),flip(),distinct('colum_name'),array_key_exists("Volvo",$a),file_put_contents(),array_merge(),resource_path(),makeDirectory(), Auth::loginUsingId($id)
file_get_contents(resource_path('views/partials/country.json'))

//jquery
closest(),parent(),form.find('[name=subject]').val();,jquery-sortable->plagin(drag & drop)
$(this).find("option:selected").data('locals');

//for view share
file path: providers/AppServiceProvider.php
 public function boot()
    {
        $viewShare['language'] = Language::all();
        $viewShare['emptyMessage'] = 'Data not found';
        view()->share($viewShare);
 }
 
 //nested join
 with('currencies','currencies.method')
 with(['user','method'])
 
 //model return type
  protected $casts = [
        'code' => 'string',
        'extra' => 'object',
    ];
    
    
    //for modal
    
     <button class="btn btn-outline--success ms-1 approveBtn" data-id="{{ $withdrawal->id }}" data-amount="{{ showAmount($withdrawal->final_amount) }} {{$withdrawal->currency}}"><i class="fas la-check"></i> @lang('Approve')</button>
     
     
         <div id="approveModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@lang('Approve Withdrawal Confirmation')</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <i class="las la-times"></i>
                    </button>
                </div>
                <form action="{{ route('admin.withdraw.approve') }}" method="POST">
                    @csrf
                    <input type="hidden" name="id">
                    <div class="modal-body">
                        <p>@lang('Have you sent') <span class="fw-bold withdraw-amount text-success"></span>?</p>
                        <p class="withdraw-detail"></p>
                        <textarea name="details" class="form-control pt-3" value="{{ old('details') }}" rows="3" placeholder="@lang('Provide the details. eg: transaction number')" required></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn--primary w-100 h-45">@lang('Submit')</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
     
     
    <script>
        (function ($) {
            "use strict";
            $('.approveBtn').on('click', function() {
                var modal = $('#approveModal');
                modal.find('input[name=id]').val($(this).data('id'));
                modal.find('.withdraw-amount').text($(this).data('amount'));
                modal.modal('show');
            });
        })(jQuery);

    </script>
    
    
    //withNotify put session
    >withNotify($notify);
    
    
    //try catch
     try {
                $old = $user->image;
                $user->image = fileUploader($request->image, getFilePath('adminProfile'), getFileSize('adminProfile'), $old);
            } catch (\Exception $exp) {
               dd($exp->getMessage()); //errors print
                $notify[] = ['error', 'Couldn\'t upload your image'];
                return back()->withNotify($notify);
            }
            
            
      //not duplicate data from table distinct()
      Transaction::distinct('remark')->get('remark')
      
      // date filter 
      $query->whereDate($column, '>=', $startDate)->whereDate($column, '<=', $endDate);
      
      
      //laravel components
       resources/views/components/form-generator.blade.php
          <x-form-generator />
          
        //validation
         'host' => 'required_if:email_method,smtp',
         
         
         
         //todo list
         (function($) {
            "use strict";
            var fileAdded = 0;
            $('.addFile').on('click', function() {
                if (fileAdded >= 10) {
                    notify('error', 'You\'ve added maximum number of file');
                    return false;
                }
                fileAdded++;
                $("#fileUploadsContainer").append(`
                <div class="mb-3">
                    <div class="input-group flex-nowrap">
                        <span class="input-group-text" id="basic-addon1">Label 1</span>
                        <input type="number" class="form-control" placeholder="0.00" aria-label="Username" aria-describedby="basic-addon1">
                        <button type="button" class="input-group-text btn-danger remove-btn"><i class="las la-times"></i></button>
                    </div>
                </div>
                `)
            });
            $(document).on('click', '.remove-btn', function() {
                fileAdded--;
                $(this).closest('.input-group').remove();
            });
        })(jQuery);
        
        
        //input change
         $('input[name=amount]').on('input',function(){
            alert('asdf');
        });
        
        
        //
        request()->routeIs('home')
        
        
        //plagins
        https://christianbayer.github.io/image-uploader/
        
        
        {{-- 
@push('script')
    <script>

        $(window).on("resize", function() {
            var width = $(".verification-code").width();
            var letter_spacing = width / 7.05;
            $('.verification-code input').css("letter-spacing", letter_spacing + "px");
        });

    </script>
@endpush --}}

//create image size
https://placehold.co/336x280

//vs code 
IGNITION_EDITOR=vscode
DEBUGBAR_EDITOR=vscode
DEBUGBAR_ENABLED=true
IGNITION_THEME=dark

//vs full line
ctrl+, than. wrap Word #Wrap Column=120 #Wrap Line Length=1000000...

//php method
strip_tags(),


//modal open jquery
 (function($) {
        "use strict";
        $('.loanNow').on('click', function() {
            var modal = $('#loanModal');
            var loanAmount = $('select[name=loan_amount]').val();
            if (!loanAmount) {
                notify('error', 'Please select loan amount');
                return true;
            }
            modal.find('input[name=amount]').val(loanAmount);
            modal.modal('show');
        });
    })(jQuery);


//click and copy
  $('.copyBoard').click(function() {
      var copyText = document.getElementsByClassName("myUrl");
      copyText = copyText[0];
      copyText.select();
      copyText.setSelectionRange(0, 99999);

      /*For mobile devices*/
      document.execCommand("copy");
      $(this).text('Copied');

      setTimeout(() => {
          $(this).text('Copy');
      }, 5000);
  });

//click and paste
 $('#pasteButton').click(function(e) {
      handlePaste(e);
  });

  async function handlePaste(event) {
      event.preventDefault();
      try {
          const pastedText = await navigator.clipboard.readText();
          $('.input-group').find('input[type=text]').val(pastedText);
          notify('success', `Paste - ${pastedText}`)
      } catch (error) {
          notify('error', `Something was wrong`);
      }
  }


//category subcategory
$('select[name="country"]').on('change', function() {
    var cities = $(this).find(`option:selected`).data('cities');
    var option = '';
    $.each(cities , function(index,value){
        option += "<option name='city' value='" + value.city + "'>" + value.city + "</option>";
    })
    $('select[name=city]').html(option);
})

//package
laravel-debugbar

//Select 2 dropdown
  $('.select2').select2({
     dropdownParent:$('.position-relative')
 })

//show image select2
function formatState(state) {
            if (!state.id) {
                return state.text;
            }
            var $state = $(
                '<span class="img-flag-inner"><img src="' + $(state.element).attr('data-src') + '" class="bank-image" /> ' + state.text + '</span>'
            );
            return $state;
        };
        $('.img-select2').select2({
            templateResult: formatState,
            templateSelection: formatState
        });

//blade
<select class="form-control img-select2" data-minimum-results-for-search="-1">
                                <option value='bn' data-src="https://flagcdn.com/w40/bd.png">
                                    bangladesh</option>
                                <option value='ur' data-src="https://flagcdn.com/w40/pk.png">
                                    Pakistan</option>
                                <option value='en' data-src="https://flagcdn.com/w40/us.png">
                                    United Stated
                                </option>
                            </select>

//offSetExists
@if (!app()->offsetExists('slick_style'))
    @push('style-lib')
        <link href="{{ asset($activeTemplateTrue . '/css/slick.css') }}" rel="stylesheet">
    @endpush
    @php app()->offsetSet('slick_style',true) @endphp
@endif

//Tree viewe ref
//for model
 public $allId=[];
 public function buildReferralTree($user)
    {
        $tree = [
            'id' => $user->id,
            'name' => $user->email,
            'referrals' => [],
        ];
        array_push($this->allId,$user->id);

        foreach ($user->referrals as $referral) {
            $tree['referrals'][] = $this->buildReferralTree($referral);
        }
        return $tree;
    }
//for controller
  $user = User::with('referrals')->findOrFail($id);
  $referralTree = $user->buildReferralTree($user);

  dd($user->allId);


//relation
$query->whereJsonContains('tag', $request->tag);

// return problem call function
   if(true){
       throw ValidationException::withMessages(['Maximum image is '.$plan->images]);
   }

//edit javascript url
         let url=`{{ route('admin.service.gallery.edit',':id') }}`;
            modal.find('form').attr('action',url.replace(':id',data.gallery_id));

//image upload and show
 $(".profilePicUpload").on('change', function() {
        proPicURL(this);
    });

    function proPicURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function(e) {
                $('.showProfilePhoto').prop('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    $(".remove-image").on('click', function() {
        $(this).parents(".profileParentImage").find('input[type=file]').val('');
        $(this).parents(".profileParentImage").find('.showProfilePhoto').prop('src', '');
    });


//view render for ajex
 public function productSearch(Request $request)
    {
        $products = Product::searchable(['title'])->active()->get();
        $html     = view(activeTemplate() . 'partials.products',compact('products'))->render();
        return response()->json(['success' => true, 'html' => $html]);
    }

//ajax pagination

 $(document).on('click', '.pagination a', function(e) {
     e.preventDefault();
     var page = $(this).attr('href').split('page=')[1];
     fetchItems(page);
 });

 function fetchItems(page) {
     var search = $('.product_search_form').find("[name='search']").val();
     var order_by = $('.product_search_form').find("[name='order_by']").val();

     $.ajax({
         data: {
             search: search,
             order_by: order_by
         },
         url: `{{ route('product.search') }}?page=${page}`,
         success: function(response) {
             $('#all-products').html(response.html)
         }
     });
 }


//coocki in javascript
  $(document).on("click", ".moodOnOff", function() {

                const cookieValue = getCookieValue("mode");
                if (cookieValue == 'true') {
                    document.cookie = "mode=false";
                    window.location.href = window.location.href;
                } else {
                    document.cookie = "mode=true";
                    window.location.href = window.location.href;
                }
            });

           function getCookie(name) {
                const cookieString = decodeURIComponent(document.cookie);
                const cookies = cookieString.split("; ");
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].split("=");
                    if (cookie[0] === name) {
                        return cookie[1];
                    }
                }
                return null; // return null if cookie not found
            }
            function setCookie(key, value, expired = 30, path = '/') {
                var date = new Date();
                date.setTime(date.getTime() + (expired * 24 * 60 * 60 * 1000));
                var expires = "expires=" + date.toUTCString();
                document.cookie = `${key}=${value};${expires}; path=${path}`;
            }



//query 2 colum check
 ->where(function($query){
            $query->where('pricing_model',2)->orWhere(function($q){
                $q->where('pricing_model',Status::AUCTION)->whereDate('auction_deadline', '>=', today());
            });
        })
//orderByRaw('top = 0, top ASC')

//array show relation
 public function scopeGetRiderRules()
    {
        return RiderRule::whereIn('id', $this->rider_rule_id ?? []);
    }


//cu modal select 2
 $('.select2-basic').select2({
                dropdownParent:$('#cuModal')
            })
//select2 for edit
     $('.editBtn').on('click',function (e) { 
                var country = $(this).data('country');
                $('.select2-basic').val(country).trigger('change');
            });
            $('.addBtn').on('click',function (e) { 
                $('.select2-basic').val('').trigger('change');
            });


//multiple image cumodal
   //blade
   @php
    $image_with_path = [];
    $image_with_path[0] = getImage(getFilePath('fileType') . '/' . $fileType->image, getFileSize('fileType'));
    $image_with_path[1] = getImage(getFilePath('fileTypeCollection') . '/' . $fileType->collection_image, getFileSize('fileTypeCollection'));
    $fileType->image_with_path = $image_with_path;
    @endphp

  //cumodal
if (resource.image_with_path) {
   if ($.isArray(resource.image_with_path)) {
       let imageUploadPreview = cuModal.find(".image-upload-preview");
        $.each(imageUploadPreview, function (i, e) {
        $(e).css("background-image", `url(${resource.image_with_path[i]})`);
    });
     } else {
        cuModal.find(".image-upload-preview").css("background-image", `url(${resource.image_with_path})`);
       }
        }


//FTP SERVICE
adminer.org
winscp

//replace js
   let videoLink = (`{{ asset(getFilePath('fileTypeVideo') . '/' . ':video') }}`).replace(":video", video);


//github compire file 
git add .
git commit -m "immediate"
git archive --output=modified_and_added_files.zip HEAD -- $(git diff --name-only --diff-filter=AM HEAD~1..HEAD)
git reset HEAD~1

git reset --soft HEAD~1



//for textarea
<p>@php echo nl2br($message->message) @endphp</p>

//select data
 @foreach ($gatewayCurrency as $item)
    <option data-gateway='@json($item)' value="{{ $item->id }}">{{ $item->name }}</option>
@endforeach

  var methodCode = $(this).find('option:selected').data('gateway');


//sql
SET  @num := 0;
UPDATE notification_templates SET id = @num := (@num+1);
ALTER TABLE notification_templates AUTO_INCREMENT =1;


//input value jquery
let accountInformation = @json($accountListing->account_info);
                $(accountInformation).each(function(index, information) {
                    let name = removeSpecialCharacters(titleToKey(information.name));
                    let targetElement = $(`[name=${name}]`);
                    let type = information.type;
                    if (type == 'file') return;
                    if (type == 'select') targetElement.val(information.value).change();
                    if (type == 'text' || type == 'url' || type == 'time' || type == 'datetime') targetElement.val(information.value);
                    if (type == 'textarea') targetElement.text(information.value);
                    if (type == 'checkbox') {
                        if (typeof information.value == 'string') {
                            targetElement.val(information.value);
                            targetElement.prop('checked', true);
                        } else {
                            let value = Array.from(information.value);
                            targetElement = $(`[name='${name}[]']`);
                            $(targetElement).each(function(index, ele) {
                                if (value.indexOf(ele.value) != -1) {
                                    $(ele).prop('checked', true)
                                }
                            });
                        }
                    }
                    if (information.type == 'radio') {
                        $(targetElement).each(function(index, elem) {
                            if (elem.value == information.value) {
                                $(elem).prop('checked', true)
                            }
                        });
                    }
                });


//modal data show in blade
$('.detailBtn').on('click', function() {
                let modal = $('#detailModal');
                let invest = $(this).data('invest');
                let html = '';
                html = `@include($activeTemplate . 'partials.invest_detail_modal', ['invest' => $invest])`;
                modal.find('.userData').html(html);
                modal.modal('show');
            });


//css
.form--control[type="file"]::file-selector-button 
.object-fit

//clone/copy
(clone $categoryList)->count();

//language select
shift+home
shift + right array
=GOOGLETRANSLATE(A1, "en", "ar")
alt + f3 (all select)


data-resource='@json($invoice->invoiceItem)'

Skeleton

learn query
---------------
addSelect,
selectRaw,
from,
join

selectRaw("SUM(amount) as amount, DATE_FORMAT(created_at, '%Y-%M') as date")->groupBy('date')->get();




//taknic

if ($hasImages) {
            $images    = [];

            foreach ($hasImages as $file) {
                try {
                    $name                      = fileUploader($file, $path);
                    $image                     = new ProductReviewImage();
                    $image->product_review_id = $review->id;
                    $image->image               = $name;
                    $images[]                  = $image;
                } catch (\Exception $exp) {
                    return false;
                }
            }
            $review->productReviewImage()->saveMany($images);
        }
